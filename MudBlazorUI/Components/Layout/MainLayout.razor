@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazorData.Data
@using MudBlazorDomain.Models

@inherits LayoutComponentBase
@* @inject CustomAuthenticationStateProvider _authenticationStateProvider *@
@inject NavigationManager _navigate
@* @inject Blazored.SessionStorage.ISessionStorageService sessionStorage *@

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <AuthorizeView>
        <Authorized>
    <MudAppBar>
        <MudIconButton Icon="@Icons.Material.Filled.Menu" 
        Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"></MudIconButton>
        Base App
        <MudSpacer />
                <MudStack>
                    <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_customTheme" />
                    <MudToggleIconButton @bind-Toggled="@_isDarkMode"
                    Icon="@Icons.Material.Filled.DarkMode"
                    Color="@Color.Default"
                    ToggledIcon="@Icons.Material.Filled.WbSunny"
                    ToggledColor="@Color.Default" />
                </MudStack>
                <MudStack>
                    <div Class="d-flex justify-space-around flex-wrap mt-4">
                    <MudBadge Content="100" Color="Color.Primary" Overlap="true" Class="mx-6 my-4">
                        <MudIcon Icon="@Icons.Material.Filled.Email" Color="Color.Default" />
                    </MudBadge>
                    <MudNavLink Href="/" onclick="(() => Logout())" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Logout">Logout</MudNavLink>
                    </div>
                </MudStack>
         @*    <NotAuthorized>
            <MudStack>
                <MudNavLink Href="/Login" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Login">Login</MudNavLink>
            </MudStack>
            </NotAuthorized> *@
            </MudAppBar>
        </Authorized>
    </AuthorizeView>
    <AuthorizeView>
        <Authorized>
        <MudDrawer @bind-Open="@_drawerOpen" Elevation="20" Anchor="Anchor.Left">
            <MudDrawerHeader>
                <MudText Typo="Typo.h4">Base App</MudText>
            </MudDrawerHeader>
            <MudDrawerContainer>
                <NavMenu />
            </MudDrawerContainer>
        </MudDrawer>
          </Authorized>
          </AuthorizeView>
    <MudMainContent>
        <div class="container" style="margin-left:10px">
            @Body
        </div>
    </MudMainContent>
</MudLayout>
@code{
    private bool _drawerOpen = false;
    private bool _isDarkMode;

    private UserViewModel _user;
    protected override async Task OnInitializedAsync()
    {

        // await sessionStorage.SetItemAsync("name", "John Smith");
        // var name = await sessionStorage.GetItemAsync<string>("name");
        _user = new UserViewModel();
        // _navigate.NavigateTo("/Login", true);
        await base.OnInitializedAsync();
    }
    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    MudTheme _customTheme = new MudTheme()
    {
        PaletteLight = new PaletteLight()
        {
            Primary = Colors.DeepPurple.Darken2,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.BlueGray.Darken3
        },
        PaletteDark = new PaletteDark()
        {
            Primary = Colors.DeepPurple.Darken4,
            Secondary = Colors.Green.Accent4,
            AppbarBackground = Colors.BlueGray.Darken3
        }
    };

    public void Logout()
    {
        // ((CustomAuthenticationStateProvider)_authenticationStateProvider).Logout();
        // _navigate.NavigateTo("/Login", true);
    }
}