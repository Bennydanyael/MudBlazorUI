@page "/login"

@using Microsoft.AspNetCore.Authorization
@using MudBlazorData.Data
@using MudBlazorDomain.Models
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazorUI.Components.Layout
@layout LoginLayout
@attribute [StreamRendering]
@attribute [AllowAnonymous]
@* @inject CustomAuthenticationStateProvider AuthenticationStateProvider *@
@inject NavigationManager _navigate
@* @inject Blazored.SessionStorage.ISessionStorageService _sessionStorage *@

<PageTitle>Login</PageTitle>
@* <MudStack Row Class="justify-space-between mud-width-full">
    <MudStack Style="width: 300px">
        <MudTextField @bind-Value="Username" Label="Username" Variant="Variant.Text"></MudTextField>
        <MudTextField @bind-Value="Password" Label="Password" Variant="Variant.Text"></MudTextField>
        <MudButton Variant="Variant.Text" Color="Color.Primary">Login</MudButton>
    </MudStack>
</MudStack>
 *@

@* <div class="col-8 card">
    <div class="col-12 row"> *@
        <MudTabs Elevation="1" Rounded="true" PanelClass="pa-6">
            <MudTabPanel Text="Login" ToolTip="ToolTip One" Style="width:50%;border:groove;">
                 <MudStack Class="justify-space-between mud-width-full">
            <MudCard Style="width:500px;glyph-orientation-horizontal:revert-layer">
                        <MudCardContent>
                             <MudForm Model="@_user" OnValidSubmit="@ValidateUser()">
                                <MudTextField @bind-Value="@_user.UserName" Label="Username" Variant="Variant.Text"></MudTextField>
                                    <MudTextField @bind-Value="@_user.Password" Label="Password" Variant="Variant.Text" InputType="@InputType.Password"></MudTextField>
                            </MudForm>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Success">Login</MudButton>
                             </MudCardActions>
                    </MudCard>
                </MudStack>
            </MudTabPanel>
            <MudTabPanel Text="Register" ToolTip="ToolTip One" Style="width:50%;border:groove">
                <MudStack Class="justify-space-between mud-width-full">
                    <MudCard Style="width:500px;">
                        <MudCardContent>
                        <MudForm Model="@_user" OnValidSubmit="@ValidateUser()">
                            <MudTextField @bind-Value="@_user.Email" Label="Email" Variant="Variant.Text"></MudTextField>
                            <MudTextField @bind-Value="@_user.UserName" Label="Username" Variant="Variant.Text"></MudTextField>
                            <MudTextField @bind-Value="@_user.Password" Label="Password" Variant="Variant.Text" InputType="@InputType.Password" Adornment="Adornment.End"></MudTextField>
                        </MudForm>
                        </MudCardContent>
                        <MudCardActions>
                    <MudButton Variant="Variant.Text" Color="Color.Primary" Adornment="Adornment.End">Submit</MudButton>
                        </MudCardActions>
                    </MudCard>
                </MudStack>
            </MudTabPanel>
        </MudTabs>
@*     </div>
</div> *@

@code {
    private UserViewModel _user;
    protected override Task OnInitializedAsync()
    {
        _user = new UserViewModel();
        return base.OnInitializedAsync();
    }

    public async Task<bool> ValidateUser()
    {
        // await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).NotifAuthenticated(_user.Email);
        // _navigate.NavigateTo("/");

        // await _sessionStorage.SetItemAsync("Email", _user.UserName);

        return await Task.FromResult(true);
    }
}
